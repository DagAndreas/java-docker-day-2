openapi: 3.0.0
info:
  title: User and Message API
  description: API for managing users and messages
  version: 1.0.0
servers:
  - url: http://localhost:4000
    description: Local server
paths:
  /users:
    get:
      summary: Get all users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      requestBody:
        description: User object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: The created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid user data

  /users/{id}:
    get:
      summary: Get a user by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: User ID
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
    put:
      summary: Update a user by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: User ID
      requestBody:
        description: User object with updated details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: The updated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
        '400':
          description: Invalid user data
    delete:
      summary: Delete a user by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: User ID
      responses:
        '200':
          description: The deleted user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found

  /messages:
    get:
      summary: Get all messages
      responses:
        '200':
          description: A list of messages
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
    post:
      summary: Create a new message
      requestBody:
        description: Message object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
      responses:
        '201':
          description: The created message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          description: Invalid message data

  /messages/{id}:
    get:
      summary: Get a message by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Message ID
      responses:
        '200':
          description: Message found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '404':
          description: Message not found
    put:
      summary: Update a message by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Message ID
      requestBody:
        description: Message object with updated details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
      responses:
        '201':
          description: The updated message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '404':
          description: Message not found
        '400':
          description: Invalid message data
    delete:
      summary: Delete a message by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Message ID
      responses:
        '200':
          description: The deleted message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '404':
          description: Message not found

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          description: User ID
        username:
          type: string
          description: Username of the user
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          description: List of messages from this user

    Message:
      type: object
      properties:
        id:
          type: integer
          description: Message ID
        text:
          type: string
          description: Content of the message
        postedDate:
          type: string
          format: date
          description: Date the message was posted
        user:
          $ref: '#/components/schemas/User'
          description: The user who posted the message
